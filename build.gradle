plugins {
    id("io.micronaut.application") version "$micronautAppVersion"
}

version = "0.1"
group = "com.snourian.example"

repositories {
    mavenCentral()
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.snourian.example.dynquery.*")
    }
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("jakarta.persistence:jakarta.persistence-api:$jpaVersion")
    annotationProcessor("org.mapstruct:mapstruct-processor:$mapstructVersion")
    implementation("org.mapstruct:mapstruct:$mapstructVersion")
    implementation("com.snourian.micronaut:querydsl-dynamic-query:$querydslDynQueryVersion")
    implementation("javax.inject:javax.inject:$javaxInjectVersion")
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.data:micronaut-data-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-hibernate-jpa")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    implementation("javax.annotation:javax.annotation-api")
    runtimeOnly("ch.qos.logback:logback-classic")
    runtimeOnly("com.h2database:h2")
    implementation("io.micronaut:micronaut-validation")
}


application {
    mainClass.set("com.snourian.example.dynquery.Application")
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// Set encodings for Java and Test compilation and JavaDocs
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test) {
    defaultCharacterEncoding = 'UTF-8'
}
tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}

